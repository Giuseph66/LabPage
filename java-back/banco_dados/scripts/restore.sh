#!/bin/bash

# Script de restore para o banco de dados HardLab
# Uso: ./restore.sh [arquivo_backup]

set -e

# Configura√ß√µes
DB_NAME="hardlab"
DB_USER="hardlab"
DB_HOST="localhost"
DB_PORT="5432"
BACKUP_DIR="./backups"

# Verificar se foi fornecido um arquivo de backup
if [ -z "$1" ]; then
    echo "‚ùå Erro: Arquivo de backup n√£o especificado!"
    echo "üí° Uso: ./restore.sh [arquivo_backup]"
    echo "üìÅ Backups dispon√≠veis:"
    ls -la "$BACKUP_DIR"/*.sql 2>/dev/null || echo "   Nenhum backup encontrado"
    exit 1
fi

# Verificar se o arquivo existe
BACKUP_FILE="$1"
if [ ! -f "$BACKUP_FILE" ]; then
    # Tentar encontrar no diret√≥rio de backups
    BACKUP_FILE="$BACKUP_DIR/$1"
    if [ ! -f "$BACKUP_FILE" ]; then
        echo "‚ùå Erro: Arquivo de backup n√£o encontrado: $1"
        exit 1
    fi
fi

echo "üîÑ Iniciando restore do banco de dados HardLab..."
echo "üìÅ Arquivo: $BACKUP_FILE"

# Confirmar a√ß√£o
read -p "‚ö†Ô∏è  ATEN√á√ÉO: Isso ir√° substituir todos os dados atuais. Continuar? (y/N): " -n 1 -r
echo
if [[ ! $REPLY =~ ^[Yy]$ ]]; then
    echo "‚ùå Restore cancelado pelo usu√°rio"
    exit 1
fi

# Parar aplica√ß√µes que usam o banco (se necess√°rio)
echo "üõë Parando aplica√ß√µes que usam o banco..."

# Executar restore
echo "üì• Executando restore..."
docker exec -i hardlab-postgres psql \
    -U "$DB_USER" \
    -d "$DB_NAME" \
    -h "$DB_HOST" \
    -p "$DB_PORT" \
    < "$BACKUP_FILE"

# Verificar se o restore foi executado com sucesso
if [ $? -eq 0 ]; then
    echo "‚úÖ Restore executado com sucesso!"
    echo "üîÑ Reiniciando aplica√ß√µes..."
    
    # Aqui voc√™ pode adicionar comandos para reiniciar suas aplica√ß√µes
    # docker-compose restart java-back
    # docker-compose restart react-front
    
else
    echo "‚ùå Erro ao executar restore!"
    exit 1
fi

echo "üéâ Restore conclu√≠do!" 